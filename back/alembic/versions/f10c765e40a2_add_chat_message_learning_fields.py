"""add_chat_message_learning_fields

Revision ID: f10c765e40a2
Revises: 6ad59c210fb2
Create Date: 2025-07-20 18:00:16.070512

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f10c765e40a2'
down_revision: Union[str, None] = '6ad59c210fb2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_future_projections_assessment_id', table_name='future_projections')
    op.drop_index('ix_future_projections_id', table_name='future_projections')
    op.drop_index('ix_future_projections_user_id', table_name='future_projections')
    op.drop_table('future_projections')
    op.drop_index('ix_user_assessments_id', table_name='user_assessments')
    op.drop_index('ix_user_assessments_user_id', table_name='user_assessments')
    op.drop_table('user_assessments')
    op.drop_index('ix_chat_messages_id', table_name='chat_messages')
    op.drop_index('ix_chat_messages_session_id', table_name='chat_messages')
    op.drop_index('ix_chat_messages_user_id', table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_user_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_daily_plans_assessment_id', table_name='daily_plans')
    op.drop_index('ix_daily_plans_id', table_name='daily_plans')
    op.drop_index('ix_daily_plans_user_id', table_name='daily_plans')
    op.drop_table('daily_plans')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_plans',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assessment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('plan_type', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('plan_json', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['user_assessments.id'], name='daily_plans_assessment_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='daily_plans_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='daily_plans_pkey')
    )
    op.create_index('ix_daily_plans_user_id', 'daily_plans', ['user_id'], unique=False)
    op.create_index('ix_daily_plans_id', 'daily_plans', ['id'], unique=False)
    op.create_index('ix_daily_plans_assessment_id', 'daily_plans', ['assessment_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_user_id', 'users', ['user_id'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('chat_messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('embedding', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='chat_messages_pkey')
    )
    op.create_index('ix_chat_messages_user_id', 'chat_messages', ['user_id'], unique=False)
    op.create_index('ix_chat_messages_session_id', 'chat_messages', ['session_id'], unique=False)
    op.create_index('ix_chat_messages_id', 'chat_messages', ['id'], unique=False)
    op.create_table('user_assessments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_assessments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('overall_glow_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('biological_age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('emotional_age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('chronological_age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category_scores', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('glowup_archetype', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('micro_habits', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('avatar_urls', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('analysis_summary', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('detailed_insights', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_assessments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_assessments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_user_assessments_user_id', 'user_assessments', ['user_id'], unique=False)
    op.create_index('ix_user_assessments_id', 'user_assessments', ['id'], unique=False)
    op.create_table('future_projections',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assessment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('orchestrator_output', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('quiz_insights', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('photo_insights', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('projection_result', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('weekly_plan', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['user_assessments.id'], name='future_projections_assessment_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='future_projections_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='future_projections_pkey')
    )
    op.create_index('ix_future_projections_user_id', 'future_projections', ['user_id'], unique=False)
    op.create_index('ix_future_projections_id', 'future_projections', ['id'], unique=False)
    op.create_index('ix_future_projections_assessment_id', 'future_projections', ['assessment_id'], unique=False)
    # ### end Alembic commands ###
