"""add_project_tracking_tables

Revision ID: a1895e971763
Revises: 8d0cb0fc0c08
Create Date: 2025-07-30 17:49:54.589297

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a1895e971763'
down_revision: Union[str, None] = '8d0cb0fc0c08'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_custom_habits_id', table_name='custom_habits')
    op.drop_index('ix_custom_habits_user_id', table_name='custom_habits')
    op.drop_table('custom_habits')
    op.drop_index('ix_plan_version_history_created_at', table_name='plan_version_history')
    op.drop_index('ix_plan_version_history_plan_id', table_name='plan_version_history')
    op.drop_index('ix_plan_version_history_user_id', table_name='plan_version_history')
    op.drop_index('ix_plan_version_history_version_number', table_name='plan_version_history')
    op.drop_table('plan_version_history')
    op.drop_index('ix_habit_completions_assessment_id', table_name='habit_completions')
    op.drop_index('ix_habit_completions_daily_plan_id', table_name='habit_completions')
    op.drop_index('ix_habit_completions_id', table_name='habit_completions')
    op.drop_index('ix_habit_completions_user_id', table_name='habit_completions')
    op.drop_table('habit_completions')
    op.drop_index('ix_progress_snapshots_assessment_id', table_name='progress_snapshots')
    op.drop_index('ix_progress_snapshots_id', table_name='progress_snapshots')
    op.drop_index('ix_progress_snapshots_user_id', table_name='progress_snapshots')
    op.drop_table('progress_snapshots')
    op.drop_index('ix_user_preferences_id', table_name='user_preferences')
    op.drop_index('ix_user_preferences_user_id', table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index('ix_daily_plans_assessment_id', table_name='daily_plans')
    op.drop_index('ix_daily_plans_id', table_name='daily_plans')
    op.drop_index('ix_daily_plans_user_id', table_name='daily_plans')
    op.drop_table('daily_plans')
    op.drop_index('ix_user_assessments_id', table_name='user_assessments')
    op.drop_index('ix_user_assessments_user_id', table_name='user_assessments')
    op.drop_table('user_assessments')
    op.drop_index('ix_future_projections_assessment_id', table_name='future_projections')
    op.drop_index('ix_future_projections_id', table_name='future_projections')
    op.drop_index('ix_future_projections_user_id', table_name='future_projections')
    op.drop_table('future_projections')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_user_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_chat_messages_id', table_name='chat_messages')
    op.drop_index('ix_chat_messages_session_id', table_name='chat_messages')
    op.drop_index('ix_chat_messages_user_id', table_name='chat_messages')
    op.drop_table('chat_messages')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('embedding', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('message_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sentiment_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('topic_tags', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('wellness_domain', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('urgency_level', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('requires_followup', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='chat_messages_pkey')
    )
    op.create_index('ix_chat_messages_user_id', 'chat_messages', ['user_id'], unique=False)
    op.create_index('ix_chat_messages_session_id', 'chat_messages', ['session_id'], unique=False)
    op.create_index('ix_chat_messages_id', 'chat_messages', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_user_id', 'users', ['user_id'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('future_projections',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assessment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('orchestrator_output', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('quiz_insights', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('photo_insights', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('projection_result', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('weekly_plan', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['user_assessments.id'], name='future_projections_assessment_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='future_projections_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='future_projections_pkey')
    )
    op.create_index('ix_future_projections_user_id', 'future_projections', ['user_id'], unique=False)
    op.create_index('ix_future_projections_id', 'future_projections', ['id'], unique=False)
    op.create_index('ix_future_projections_assessment_id', 'future_projections', ['assessment_id'], unique=False)
    op.create_table('user_assessments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_assessments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('overall_glow_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('biological_age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('emotional_age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('chronological_age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category_scores', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('glowup_archetype', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('micro_habits', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('avatar_urls', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('analysis_summary', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('detailed_insights', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('quiz_answers', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_assessments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_assessments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_user_assessments_user_id', 'user_assessments', ['user_id'], unique=False)
    op.create_index('ix_user_assessments_id', 'user_assessments', ['id'], unique=False)
    op.create_table('daily_plans',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('daily_plans_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assessment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('plan_type', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('plan_json', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['user_assessments.id'], name='daily_plans_assessment_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='daily_plans_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='daily_plans_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_daily_plans_user_id', 'daily_plans', ['user_id'], unique=False)
    op.create_index('ix_daily_plans_id', 'daily_plans', ['id'], unique=False)
    op.create_index('ix_daily_plans_assessment_id', 'daily_plans', ['assessment_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('custom_morning_routine', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('custom_evening_routine', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('custom_habits', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('preferred_wake_time', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('preferred_sleep_time', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('preferred_exercise_time', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('preferred_exercise_intensity', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('work_schedule', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('family_obligations', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('dietary_preferences', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('cultural_context', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('primary_goals', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('focus_areas', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('avoid_areas', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('preferred_motivation_style', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('preferred_planning_style', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_preferences_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_preferences_pkey')
    )
    op.create_index('ix_user_preferences_user_id', 'user_preferences', ['user_id'], unique=False)
    op.create_index('ix_user_preferences_id', 'user_preferences', ['id'], unique=False)
    op.create_table('progress_snapshots',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assessment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('snapshot_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('overall_glow_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category_scores', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('biological_age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('emotional_age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('chronological_age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['user_assessments.id'], name='progress_snapshots_assessment_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='progress_snapshots_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='progress_snapshots_pkey')
    )
    op.create_index('ix_progress_snapshots_user_id', 'progress_snapshots', ['user_id'], unique=False)
    op.create_index('ix_progress_snapshots_id', 'progress_snapshots', ['id'], unique=False)
    op.create_index('ix_progress_snapshots_assessment_id', 'progress_snapshots', ['assessment_id'], unique=False)
    op.create_table('habit_completions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assessment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('daily_plan_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('habit_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('habit_content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('day_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['user_assessments.id'], name='habit_completions_assessment_id_fkey'),
    sa.ForeignKeyConstraint(['daily_plan_id'], ['daily_plans.id'], name='habit_completions_daily_plan_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='habit_completions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='habit_completions_pkey')
    )
    op.create_index('ix_habit_completions_user_id', 'habit_completions', ['user_id'], unique=False)
    op.create_index('ix_habit_completions_id', 'habit_completions', ['id'], unique=False)
    op.create_index('ix_habit_completions_daily_plan_id', 'habit_completions', ['daily_plan_id'], unique=False)
    op.create_index('ix_habit_completions_assessment_id', 'habit_completions', ['assessment_id'], unique=False)
    op.create_table('plan_version_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('plan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('version_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('plan_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('plan_type', sa.VARCHAR(length=32), server_default=sa.text("'7-day'::character varying"), autoincrement=False, nullable=False),
    sa.Column('change_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('change_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('changed_fields', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('previous_values', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('changed_by', sa.VARCHAR(length=50), server_default=sa.text("'user'::character varying"), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['daily_plans.id'], name='plan_version_history_plan_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='plan_version_history_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='plan_version_history_pkey')
    )
    op.create_index('ix_plan_version_history_version_number', 'plan_version_history', ['version_number'], unique=False)
    op.create_index('ix_plan_version_history_user_id', 'plan_version_history', ['user_id'], unique=False)
    op.create_index('ix_plan_version_history_plan_id', 'plan_version_history', ['plan_id'], unique=False)
    op.create_index('ix_plan_version_history_created_at', 'plan_version_history', ['created_at'], unique=False)
    op.create_table('custom_habits',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('trigger', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('reward', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('difficulty_level', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('frequency', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('estimated_duration', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('last_completed', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('completion_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='custom_habits_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='custom_habits_pkey')
    )
    op.create_index('ix_custom_habits_user_id', 'custom_habits', ['user_id'], unique=False)
    op.create_index('ix_custom_habits_id', 'custom_habits', ['id'], unique=False)
    # ### end Alembic commands ###
